{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","status","current","length","winner","calculateWinner","moves","map","step","move","decs","key","jumpTo","handleClick","slice","setState","concat","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"yOAcA,SAASA,EAAOC,GACd,OACE,4BAAQC,UAAU,SAASC,QAAS,kBAAMF,EAAME,YAC7CF,EAAMG,O,IAKPC,E,2KAESC,GAAI,IAAD,OACd,OAAO,kBAACN,EAAD,CACLI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAOpC,OACE,6BACE,yBAAKJ,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,S,GA3BTC,IAAMC,WAkCpBC,E,kDACJ,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAQ,CACXC,QAAS,CACP,CAAEN,QAASO,MAAM,GAAGC,KAAK,QAE3BC,SAAS,GANM,E,qDAUT,IAMJC,EANG,OACDJ,EAAUP,KAAKM,MAAMC,QACrBK,EAAUL,EAAQA,EAAQM,OAAS,GAEnCC,EAASC,EAAgBH,EAAQX,SAIrCU,EADEG,EACO,WAAaA,EAGb,iBAAmBd,KAAKM,MAAMI,QAAU,IAAM,KAGzD,IAAMM,EAAQT,EAAQU,KAAI,SAACC,EAAMC,GAC/B,IAAMC,EAAOD,EAAO,eAAiBA,EAAO,mBAC5C,OACE,wBAAIE,IAAKF,GACP,4BAAQvB,QAAS,EAAK0B,OAAOH,IAAQC,OAK3C,OACE,yBAAKzB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CACEG,QAASW,EAAQX,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAKwB,YAAYxB,OAGrC,yBAAKJ,UAAU,aACb,yBAAKA,UAAU,UAAUgB,GACzB,gCAAMK,O,6BAMPG,M,kCAIKpB,GACV,IAAMQ,EAAUP,KAAKM,MAAMC,QAErBN,EADUM,EAAQA,EAAQM,OAAS,GACjBZ,QAAQuB,QAC5BT,EAAgBd,IAAYA,EAAQF,KAIxCE,EAAQF,GAAKC,KAAKM,MAAMI,QAAU,IAAM,IACxCV,KAAKyB,SAAS,CACZlB,QAASA,EAAQmB,OAAO,CAAC,CACvBzB,QAASA,KAEXS,SAAUV,KAAKM,MAAMI,e,GAnERP,IAAMC,WAwEzB,SAASW,EAAgBd,GAWvB,IAVA,IAAM0B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA5B,EAAI,EAAGA,EAAI4B,EAAMd,OAAQd,IAAK,CAAC,IAAD,cACnB4B,EAAM5B,GADa,GAC9B6B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI7B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,IAAM5B,EAAQ2B,KAAO3B,EAAQ6B,GACpE,OAAO7B,EAAQ2B,GAGnB,OAAO,KAITG,IAASC,OACP,kBAAC3B,EAAD,MACA4B,SAASC,eAAe,W","file":"static/js/main.fcfe7dfe.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// class Square extends React.Component {\n//   render() {\n//     return (\n//       <button className=\"square\" onClick={ () => this.props.onClick()}>\n//         {this.props.value}\n//       </button>\n//     );\n//   }\n// }\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={() => props.onClick()}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n\n  renderSquare(i) {\n    return <Square\n      value={this.props.squares[i]}\n      onClick={() => this.props.onClick(i)}\n\n    />;\n  }\n\n  render() {\n\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        { squares: Array(9).fill(null) }\n      ],\n      xIsNext: true\n    }\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n\n    const winner = calculateWinner(current.squares)\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    }\n    else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    const moves = history.map((step, move) => {\n      const decs = move ? 'Go to move #' + move : 'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={this.jumpTo(move)}>{decs}</button>\n        </li>\n      )\n    })\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div className=\"status\">{status}</div>\n          <ol> {moves}</ol>\n        </div>\n      </div>\n    );\n  }\n\n  jumpTo(move) {\n\n  }\n\n  handleClick(i) {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const squares = current.squares.slice()\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O'\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      xIsNext: !this.state.xIsNext\n    });\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}